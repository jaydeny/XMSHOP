

@{
    ViewBag.Title = "getGoodsPage";
}

<!DOCTYPE html>
<html>
<head>

</head>
<body>
    <div id="app">
        <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pb-2 mb-3 border-bottom">
            <h1 class="h2">{{config.hearTitle}}</h1>

            <button class="btn btn-outline-secondary" type="button" v-on:click="onMyGoods($event)">{{config.myGoodsBtn}}</button>

            <div>
                <div class="input-group">
                    <input type="text" class="form-control" v-model="search">
                    <div class="input-group-append">
                        <button class="btn btn-outline-secondary" type="button" v-on:click="searchAllGoods()">{{config.cardFunction.search}}</button>
                    </div>
                </div>
            </div>
            <div class="btn-toolbar mb-2 mb-md-0">
                <div class="btn-group mr-2">
                    <button class="btn btn-sm btn-outline-secondary">{{config.showDataType.cardType}}</button>

                </div>
            </div>
        </div>
        <nav class="col-md-2 d-none d-md-block bg-light sidebar">
            <div class="list-group">
                <button type="button" class="list-group-item list-group-item-action active">
                    {{config.goodsType}}
                </button>
                <button type="button" class="list-group-item list-group-item-action">{{config.goodsTypeAll}}</button>
                <div>
                    <button type="button" class="list-group-item list-group-item-action">手机</button>
                </div>
            </div>
        </nav>
        @*后台全部商品*@
        <main role="main" class="col-md-9 ml-sm-auto col-lg-10 pt-3 px-4" v-show="myGoodsShow">

            <div class="card" style="width: 18rem; display: inline-flex; margin:5px" v-for="(obj,index) in Goods" :key="index">
                <img class="card-img-top" src="http://cf-attach.i-sogi.com/cn/article/img/201312/2013121610401667595.jpg" style="height : 165px" alt="加载失败">
                <div class="card-body">
                    <h5 class="card-title">{{config.cardTitle}} <span>{{obj.GoodsName}}</span> </h5>
                    <p class="card-text"><span>{{obj.GoodsIntro}}</span> </p>
                </div>
                <ul class="list-group list-group-flush">
                    <li class="list-group-item">{{config.cardGoodsTime}} <span>{{obj.GoodsCreateTime}}</span> </li>
                    <li class="list-group-item">{{config.cardGoodsReferencePrice}} <span>{{obj.GoodsPrice}}</span> </li>
                    <li class="list-group-item">{{config.cardGoodsPrice}} <input type="number" class="price" /> </li>
                </ul>
                <div class="card-body">
                    @*一键发布哦哦*@
                    <a href="#" class="btn btn-primary" v-on:click="Release(index)">{{config.cardFunction.Release}}</a>
                </div>
            </div>
            @*全部商品分页*@
            <nav aria-label="Page navigation example">
                <ul class="pagination">
                    <li class="page-item">
                        <span class="page-link">
                            显示条数  <select class="form-control form-control-sm" v-model="All_count">
                                <option value="10">10</option>
                                <option value="20">20</option>
                                <option value="50">50</option>
                            </select>
                        </span>
                    </li>

                    <li class="page-item">
                        <a class="page-link" v-on:click="All_before()" href="#">
                            <span aria-hidden="true">&laquo;</span>
                            <span class="sr-only">上一页</span>
                        </a>
                    </li>
                    <li class="page-item" v-on:click="All_end()">
                        <a class="page-link" href="#">
                            <span aria-hidden="true">&raquo;</span>
                            <span class="sr-only">下一页</span>
                        </a>
                    </li>
                    <li class="page-item"><a class="page-link" href="#">共 {{AllGoodsCountFilter}} 页</a></li>
                    <li class="page-item"><a class="page-link" href="#">共 {{GoodsCount}} 条数据</a></li>
                    <li class="page-item">
                        <span class="page-link">
                            跳转页码
                            <select class="form-control form-control-sm" v-model="All_pageSize" >
                                <option :value="index" v-for="(index) in AllGoodsCountFilter" :key="index">{{index}}</option>
                            </select>
                        </span>
                    </li>
                    <li class="page-item"><a class="page-link" v-on:click="All_btn_sub()" href="#">确定</a></li>
                </ul>
            </nav>
        </main>

        @*代理个人商品*@
        <main role="main" class="col-md-9 ml-sm-auto col-lg-10 pt-3 px-4" v-show="!myGoodsShow">

            <div class="card" style="width: 18rem; display: inline-flex; margin:5px" v-for="(obj,index) in myGoods" :key="index">
                <img class="card-img-top" src="http://cf-attach.i-sogi.com/cn/article/img/201312/2013121610401667595.jpg" style="height : 165px" alt="加载失败">
                <div class="card-body">
                    <h5 class="card-title">{{config.cardTitle}} <span>{{obj.goods_name}}</span> </h5>
                    <p class="card-text"><span>{{obj.goods_intro}}</span> </p>
                </div>
                <ul class="list-group list-group-flush">
                    <li class="list-group-item">{{config.cardGoodsTime}} <span>{{obj.up_time}}</span> </li>
                    <li class="list-group-item">{{config.cardGoodsPrice}} <span>{{obj.price}}</span> </li>
                    <li class="list-group-item">

                        <div class="d-flex justify-content-between align-items-center">
                            <div class="btn-group">
                                <button type="button" class="btn btn-sm btn-outline-secondary" v-on:click="AlertAgentGoods(index)">编辑信息</button>
                            </div>
                            <small class="text-muted" v-if="obj.status_id != 1">以下架</small>
                        </div>

                    </li>
                </ul>
            </div>
            @*代理分页*@
            <nav aria-label="Page navigation example">
                <ul class="pagination">
                    <li class="page-item"><span class="page-link"> 显示条数
                                              <select class="form-control form-control-sm" v-model="count">
                                                  <option value="10">10</option>
                                                  <option value="20">20</option>
                                                  <option value="50">50</option>
                                              </select>
                         </span> </li>

                    <li class="page-item">
                        <a class="page-link" v-on:click="before()" href="#">
                            <span aria-hidden="true">&laquo;</span>
                            <span class="sr-only">上一页</span>
                        </a>
                    </li>
                    <li class="page-item" v-on:click="end()">
                        <a class="page-link" href="#">
                            <span aria-hidden="true">&raquo;</span>
                            <span class="sr-only">下一页</span>
                        </a>
                    </li>
                    <li class="page-item"><a class="page-link" href="#">共 {{myGoodsCountFilter}} 页</a></li>
                    <li class="page-item"><a class="page-link" href="#">共 {{myGoodsCount}} 页</a></li>
                    <li class="page-item"><span class="page-link"> 跳转页码
                                              <select class="form-control form-control-sm" v-model="pageSize">
                                                  <option :value="index" v-for="(index) in myGoodsCountFilter" :key="index">{{index}}</option>
                                              </select>
                         </span> </li>
                    <li class="page-item"><a class="page-link" v-on:click="btn_sub()" href="#">确定</a></li>
                </ul>
            </nav>
        </main>

        @*上架模态框*@
        <!-- Modal -->
        <div class="modal fade" id="exampleModalCenter" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="exampleModalLongTitle">{{config.modalTitle}}</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        {{config.modalContent}}
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">{{config.modalCloseBtn}}</button>
                        <button type="button" class="btn btn-primary" v-on:click="groundSubmir()">{{config.modalSubmitBtn}}</button>
                    </div>
                </div>
            </div>
        </div>

        @*代理商品信息修改模态框*@
        <!-- Modal -->
        <div class="modal fade" id="AlertAgentGoods" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="exampleModalLongTitle">{{config.AlertAgentGoodsModel.modalTitle}}</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <div class="col-auto">
                            <label class="sr-only" for="inlineFormInputGroup">Username</label>
                            <div class="input-group mb-2">
                                <div class="input-group-prepend">
                                    <div class="input-group-text">名称</div>
                                </div>
                                <input type="text" class="form-control" v-model="editName" placeholder="Name">
                            </div>
                        </div>
                        <div class="col-auto">
                            <label class="sr-only" for="inlineFormInputGroup">Username</label>
                            <div class="input-group mb-2">
                                <div class="input-group-prepend">
                                    <div class="input-group-text">描述</div>
                                </div>
                                <input type="text" class="form-control" v-model="editIntro" placeholder="Describe">
                            </div>
                        </div>
                        <div class="col-auto">
                            <label class="sr-only" for="inlineFormInputGroup">Username</label>
                            <div class="input-group mb-2">
                                <div class="input-group-prepend">
                                    <div class="input-group-text">定价</div>
                                </div>
                                <input type="number" class="form-control" v-model="editPrice" placeholder="Price">
                            </div>
                        </div>
                        <div class="col-auto">
                            <label class="sr-only" for="inlineFormInputGroup">Username</label>
                            <div class="input-group mb-2">
                                <div class="input-group-prepend">
                                    <div class="input-group-text">状态</div>
                                </div>
                                <select class="custom-select d-block w-100" v-model="editStatus" required>
                                    <option value="1">上架</option>
                                    <option value="2">下架</option>
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">{{config.AlertAgentGoodsModel.modalCloseBtn}}</button>
                        <button type="button" class="btn btn-primary" v-on:click="Goods_Alert_Submir()">{{config.AlertAgentGoodsModel.modalSubmitBtn}}</button>
                    </div>
                </div>
            </div>
        </div>

    </div>
    <script>
        //我们尝试使用VUE进行开发
        var VM = new Vue({
            el: "#app",
            data: {
                //全部商品
                Goods: [],
                config: {},
                search: "",
                //代理商品页码
                pageSize: '',
                //显示多少条代理商品数据
                count: '',
                //计算得出代理商品的最后一页
                total: '',
                All_pageSize: '',
                All_count: '',
                All_total: '',
                //全部商品总条数
                GoodsCount: "",
                //代理商品总条数
                myGoodsCount: "",
                //是否显示全部商品
                myGoodsShow: false,
                //我的商品
                myGoods: [],
                fromData: [],
                //更改商品
                editPorduct: [],
                editName: "",
                editIntro: "",
                editPrice: "",
                editStatus: ""
            },
            created: function () {
                //加载配置文件，将数据填充
                $.ajax({
                    url: "../../Content/StaticJson/list.json",
                    method: "get"
                }).done((data) => {
                    //将配置读取到config里
                    this.config = data;
                    //获取初始化配置
                    const size = data.pageSize;
                    const count = data.count;
                    //配置页面化
                    this.pageSize = size;
                    this.count = count;
                    this.All_count = count;
                    this.All_pageSize = size;
                    //请求参数
                    const param = {
                        "page": size,
                        "rows": count
                    }
                    ////调用加载数据方法，进行获取相关的商品
                    this.onloadData(data.goodsUrl.getAllGoods, param);
                    //调用我的代理商品方法
                    const myParam = {
                        "page": size,
                        "rows": count
                    }
                    this.onloadMyGoodsData(data.goodsUrl.myGoods, myParam);
                });
            },
            computed: {
                ////制作简单的页面商品搜索
                //GoodsFilter() {
                //    //取出相关的数据
                //    const { search, Goods } = this;
                //    //最终要显示的数据
                //    let goods;
                //    //对数据进行筛选，根据商品名
                //    goods = Goods.filter(s => s.GoodsName.indexOf(search) !== -1);
                //    //返回数据
                //    return goods
                //},
                ////制作简单的我的代理商品搜索
                //myGoodsFilter() {

                //    //取出相关的数据
                //    const { search, myGoods } = this;


                //    //最终要显示的数据
                //    let goods;
                //    //对数据进行筛选，根据商品名
                //    goods = myGoods.filter(s =>  s.goods_name.indexOf(search) !== -1);
                //    //返回数据
                //    return goods
                //},
                //计算代理商品的页数
                myGoodsCountFilter() {
                    this.total = Math.ceil(this.myGoodsCount / this.count);
                    return this.total;
                },
                //计算全部商品的页数
                AllGoodsCountFilter() {
                    this.All_total = Math.ceil(this.GoodsCount / this.All_count);
                    return this.All_total;
                }

            },
            methods: {
                //加载全部商品数据
                onloadData(url, param) {
                    $.ajax({
                        url: url,
                        method: 'get',
                        data: param,
                        dataType: 'json'
                    }).done((data) => {
                        //console.log(data)
                        this.Goods = data.rows;
                        this.GoodsCount = data.total;
                    });
                },
                //加载我的代理商品数据
                onloadMyGoodsData(url, param) {
                    //发送请求 ，请求地址 : /Agent/QryAgoods
                    $.ajax({
                        url: url,
                        data: param,
                        method: "get",
                        dataType: 'json'
                    }).then((data) => {
                        this.myGoods = data.rows;
                        this.myGoodsCount = data.total;

                    });

                },
                //一键发布的动作
                Release(GoodsIndex) {

                    //获取当前商品定价
                    let price = document.querySelectorAll(".price")[GoodsIndex].value;

                    //进行验证
                    if (price == '') {

                        //定价为空，消息警告，前期使用alert
                        alert(this.config.message.warm.priceIsNull);


                    } else {
                        //获取到当前的商品
                        const releaseGoods = this.Goods[GoodsIndex];

                        $('#exampleModalCenter').modal('show')
                        //设置请求参数
                        this.fromData = {
                            "goods_id": releaseGoods.GoodsID,
                            "status_id": 1,
                            "price": price,
                            "goods_name": releaseGoods.GoodsName

                        }
                        document.querySelectorAll(".price")[GoodsIndex].value = "";
                    }
                },
                groundSubmir() {
                    //发送请求去上架商品 请求地址: /Agent/MakeGoods

                    $.ajax({
                        url: this.config.goodsUrl.groundUrl,
                        data: this.fromData,
                        method: "post",
                        dataType: 'json'
                    }).then((data) => {
                        if (data.success) {

                            alert(data.msg);
                        } else {
                            alert(data.msg);
                        }
                    });
                    $('#exampleModalCenter').modal('hide');

                    this.onloadData(this.config.goodsUrl.getAllGoods);

                },
                //向数据库中发送请求查询数据
                searchAllGoods() {
                    //获取查询参数
                    let search = this.search;
                    //设置请求参数
                    const param = {
                        "pi": this.pageSize,
                        "pageSize": this.count,
                        "goods_name": search
                    }
                    if (this.myGoodsShow) {
                        //console.log(true)
                        this.onloadData(this.config.goodsUrl.getAllGoods, param);
                    } else {
                        //console.log(false)
                        this.onloadMyGoodsData(this.config.goodsUrl.myGoods, param);
                    }

                },
                onMyGoods(even) {
                    //console.log(even)
                    if (even.target.innerText === this.config.myGoodsBtn) {
                        this.myGoodsShow = true;
                        event.target.innerText = "全部商品";
                    } else {
                        this.myGoodsShow = false;
                        event.target.innerText = this.config.myGoodsBtn;
                    }
                },
                //代理商品分页
                //上一页
                before() {
                    const page = this.pageSize;
                    if (page <= 1) {
                        alert("已经是第一页了")
                    } else {
                        this.pageSize -= 1;
                        this.btn_sub();
                    }
                },
                //下一页
                end() {
                    const page = this.pageSize;
                    if (page >= this.total) {
                        alert("已经是最后一页了")
                    } else {
                        this.pageSize += 1;
                        this.btn_sub();
                    }
                },
                //提交页
                btn_sub() {
                    console.log(this.pageSize)
                    const param = {
                        "page": this.pageSize,
                        "rows": this.count
                    }
                    this.onloadMyGoodsData(this.config.goodsUrl.myGoods, param);
                },

                //全部商品分页
                //上一页
                All_before() {
                    const page = this.All_pageSize;
                    if (page <= 1) {
                        alert("已经是第一页了")
                    } else {
                        this.All_pageSize -= 1;
                        this.All_btn_sub();
                    }
                },
                //下一页
                All_end() {
                    const page = this.All_pageSize;
                    if (page >= this.All_total) {
                        alert("已经是最后一页了")
                    } else {
                        this.All_pageSize += 1;
                        this.All_btn_sub();
                    }
                },
                //提交页
                All_btn_sub() {
                    console.log(this.All_pageSize)
                    console.log(this.All_count)
                    const param = {
                        "page": this.All_pageSize,
                        "rows": this.All_count
                    }
                    this.onloadData(this.config.goodsUrl.getAllGoods, param);
                },

                //修改代理商品信息
                AlertAgentGoods(index) {
                    //获取对应的代理商品信息
                    const product = this.myGoods[index];
                    //存储对应代理信息，方便后面进行修改的读取
                    this.editPorduct = product;
                    this.editName = product.goods_name;
                    this.editIntro = product.goods_intro;
                    this.editPrice = product.price;
                    this.editStatus = product.status_id;
                    $('#AlertAgentGoods').modal('show');
                },
                Goods_Alert_Submir() {

                    //定义参数集
                    const param = {
                        "Agoods_id": this.editPorduct.id,
                        "goods_id": this.editPorduct.goods_id,
                        "goods_name": this.editName,
                        "price": this.editPrice,
                        "status_id": this.editStatus,
                        "goods_intro": this.editIntro
                    }
                    //发生请求
                    $.ajax({
                        url: "/Product/MakeGoods",
                        data: param,
                        dataType: "json"
                    }).then((data) => {
                        if (data.success) {
                            alert(data.msg);
                        } else {
                            alert(data.msg)
                        }
                        const param = {
                            "page": this.pageSize,
                            "rows": this.count
                        }
                        this.onloadMyGoodsData(this.config.goodsUrl.myGoods, param);

                    })
                    $('#AlertAgentGoods').modal('hide');
                }
            }
        });
    </script>
</body>
</html>

